{"version":3,"sources":["API/Instance.js","API/UsersApi.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","myComponents/MyModal.jsx","myComponents/MyWarning.jsx","myComponents/MyToast.jsx","views/dashboard/Dashboard.js"],"names":["Instance","axios","create","baseURL","headers","localStorage","getItem","UsersApi","login","password","credentials","btoa","basicAuth","get","response","data","console","log","payload","post","id","put","delete","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","MyModal","visible","setVisible","userData","setUserData","updateUsers","isPasswordRequired","show","className","noValidate","onSubmit","fluid","sm","type","required","placeholder","value","firstName","onChange","e","target","lastName","htmlFor","autoComplete","email","username","color","disabled","onClick","MyWarning","deleteUser","centered","MyToast","toasters","position","map","toast","key","autohide","fade","style","borderColor","message","Dashboard","userState","useState","allUsers","setUsers","details","setDetails","modalNewUserVisibility","setModalNewUserVisibility","modalEditUserVisibility","setModalVEditUserVisibility","warningVisibility","setWarningVisibility","clearFilters","setClearFilters","toasts","setToasts","itemIndex","setItemIndex","useEffect","fetchingUsers","a","getAllUsers","users","createNewUser","user","addNewUser","showSuccessMessage","editUser","splice","indexOf","elem","toastText","items","fields","label","_style","width","filter","sorter","itemsPerPage","pagination","align","columnFilter","columnFilterValue","onColumnFilterChange","striped","scopedSlots","item","index","variant","size","newDetails","slice","toggleDetails","includes","toggleWarning"],"mappings":"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","file":"static/js/5.0411282c.chunk.js","sourcesContent":["import axios from \"axios\";\nconst Instance = axios.create({\n  baseURL: 'https://petstore.subx64.space/api',\n  headers: {\n    'Authorization': 'Basic ' + localStorage.getItem('credentials')\n  }\n})\n\nexport default Instance\n","import Instance from \"./Instance\";\nimport axios from \"axios\";\n\nexport default class UsersApi {\n  static async getMe(login, password) {\n    try {\n      const credentials = btoa(`${login}:${password}`)\n      const basicAuth = 'Basic ' + credentials\n      await axios.get(\n        'https://petstore.subx64.space/api/users/me', {\n        headers: {\n          'Authorization': basicAuth\n        }\n      })\n      return  credentials\n    } catch (err) {\n      return false\n    }\n  }\n\n  static async getAllUsers() {\n    try {\n      const response = await Instance.get('/users')\n      return response.data\n    } catch (err) {\n      console.log(err)\n    }\n  }\n\n  static async addNewUser(payload) {\n    try {\n      await Instance.post('/users', payload)\n    } catch (err) {\n      console.log(err)\n    }\n  }\n\n  static async editUser(payload, id) {\n    try {\n      await Instance.put(`/users/${id}`, payload)\n    } catch (err) {\n      console.log(err)\n    }\n  }\n\n  static async deleteUser(id) {\n    try {\n      await Instance.delete(`/users/${id}`)\n    } catch (err) {\n      console.log(err)\n    }\n  }\n}\n","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from 'react';\nimport {\n  CButton,\n  CCol,\n  CContainer,\n  CForm,\n  CFormGroup,\n  CInput,\n  CLabel, CModal,\n  CModalBody, CModalHeader,\n  CRow\n} from \"@coreui/react\";\n\nconst MyModal = ({visible, setVisible, userData, setUserData, updateUsers, isPasswordRequired=false}) => {\n\n  const handleSubmit = () => {\n    updateUsers(userData)\n  }\n\n  return (\n    <div>\n      <CModal\n        show={visible}\n        className=\"row g-3 needs-validation\"\n        noValidate\n        onSubmit={handleSubmit}\n      >\n        <CModalHeader>Пользователь</CModalHeader>\n        <CModalBody>\n          <CContainer fluid>\n            <CRow>\n              <CCol sm=\"12\">\n                <CForm className=\"was-validated\">\n                  <CFormGroup  className=\"has-validation\">\n                    <CLabel>Имя</CLabel>\n                    <CInput\n                      type=\"text\"\n                      required\n                      placeholder=\"Введите имя..\"\n                      value={userData.firstName}\n                      onChange={e => setUserData({...userData, firstName: e.target.value})}\n                    />\n                  </CFormGroup>\n                  <CFormGroup>\n                    <CLabel>Фамилия</CLabel>\n                    <CInput\n                      type=\"text\"\n                      placeholder=\"Введите фамилию..\"\n                      value={userData.lastName}\n                      onChange={e => setUserData({...userData, lastName: e.target.value})}\n                      required\n                    />\n                  </CFormGroup>\n\n                  <CFormGroup>\n                    <CLabel htmlFor=\"nf-email\">Email</CLabel>\n                    <CInput\n                      id=\"nf-email\"\n                      type=\"email\"\n                      placeholder=\"Введите Email..\"\n                      autoComplete=\"email\"\n                      value={userData.email}\n                      onChange={e => {\n                        setUserData({...userData, email: e.target.value});\n                      }}\n                      required\n                    />\n                  </CFormGroup>\n                  <CFormGroup>\n                    <CLabel>Пароль</CLabel>\n                    <CInput\n                      type=\"text\"\n                      placeholder=\"Введите пароль..\"\n                      value={userData.password}\n                      onChange={e => setUserData({...userData, password: e.target.value})}\n                      required={isPasswordRequired}\n                    />\n                  </CFormGroup>\n                  <CFormGroup>\n                    <CLabel>Никнейм</CLabel>\n                    <CInput\n                      type=\"text\"\n                      placeholder=\"Введите никнейм\"\n                      value={userData.username}\n                      onChange={e => setUserData({...userData, username: e.target.value})}\n                      required\n                    />\n                  </CFormGroup>\n\n                  <div className=\"float-right mt-3 mb-1\">\n                    <CButton\n                      type=\"submit\"\n                      color=\"primary\"\n                      disabled={false}\n                      className=\"mr-3\"\n                    >\n                      Сохранить\n                    </CButton>\n                    <CButton\n                      color=\"secondary\"\n                      onClick={() => setVisible(false)}\n                    >Отмена</CButton>\n                  </div>\n\n                </CForm>\n              </CCol>\n            </CRow>\n          </CContainer>\n        </CModalBody>\n      </CModal>\n    </div>\n  );\n};\n\nexport default MyModal;\n","import React from 'react';\nimport {\n  CButton,\n  CModal,\n  CModalBody,\n} from \"@coreui/react\";\n\nconst MyWarning = ({visible, setVisible, userData, deleteUser}) => {\n  return (\n    <div>\n      <CModal\n        show={visible}\n        centered\n      >\n\n        <CModalBody>\n          <h5>\n           Вы уверенны, что хотите удалить запись {userData.firstName} {userData.lastName}?\n          </h5>\n          <div className=\"float-right mt-3 mb-1\">\n           <CButton\n              color=\"danger\"\n              onClick={() => deleteUser(userData)}\n              className=\"mr-3\"\n              >\n              Удалить\n            </CButton>\n            <CButton\n              color=\"secondary\"\n              onClick={() => setVisible(false)}\n            >Отмена</CButton>\n          </div>\n        </CModalBody>\n      </CModal>\n    </div>\n  );\n};\n\nexport default MyWarning;\n","import React from 'react';\nimport {CToast, CToastBody, CToaster,CToastHeader} from \"@coreui/react\";\n\nconst MyToast = ({toasters}) => {\n  return (\n    <div>\n        <CToaster\n          position=\"bottom-right\"\n        >\n          {\n            toasters.map((toast, key)=>{\n              return(\n                <CToast\n                  key={'toast' + key}\n                  show={true}\n                  autohide={3000}\n                  fade={true}\n                  style={{borderColor: '#2eb85c'}}\n                >\n                  <CToastHeader>\n                    Успешно!\n                  </CToastHeader>\n                  <CToastBody>\n                    {toast.message}\n                  </CToastBody>\n                </CToast>\n              )\n            })\n          }\n        </CToaster>\n    </div>\n  )\n};\n\nexport default MyToast;\n","import React, {useEffect, useRef, useState} from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CDataTable,\n  CCollapse,\n} from '@coreui/react'\nimport UsersApi from \"../../API/UsersApi\";\nimport MyModal from \"../../myComponents/MyModal\";\nimport MyWarning from \"../../myComponents/MyWarning\";\nimport MyToast from \"../../myComponents/MyToast\";\n\nconst Dashboard = () => {\n  const userState = {firstName: '', lastName: '', email: '', password: '', username: ''}\n\n  const [allUsers, setUsers] = useState([]);\n  const [details, setDetails] = useState([]);\n  const [modalNewUserVisibility, setModalNewUserVisibility] = useState(false);\n  const [modalEditUserVisibility, setModalVEditUserVisibility] = useState(false);\n  const [warningVisibility, setWarningVisibility] = useState(false)\n\n  const [userData, setUserData] = useState(userState);\n\n  const [clearFilters, setClearFilters] = useState({});\n\n  const [toasts, setToasts]  = useState([]);\n\n  const [itemIndex,setItemIndex]= useState(null)\n\n  const fields = [\n    {key: \"firstName\", label: \"Имя\", _style: {width: '25%'}},\n    {key: \"lastName\", label: \"Фамилия\", _style: {width: '25%'}},\n    {key: \"email\", label: \"Почта\", _style: {width: '25%'}},\n    {key: \"username\", label: \"Никнейм\", _style: {width: '20%'}},\n    {key: 'show_details', label: \"\", _style: {width: '5%'}, filter: false, sorter: false},\n  ]\n\n  useEffect(() => {\n    fetchingUsers()\n  }, []);\n\n\n  const fetchingUsers = async () => {\n    const users = await UsersApi.getAllUsers()\n    setUsers(users)\n  }\n\n  const toggleDetails = (index) => {\n    const position = details.indexOf(index)\n    let newDetails = details.slice()\n    if (position !== -1) {\n      newDetails.splice(position, 1)\n    } else {\n      newDetails = [...details, index]\n    }\n    setDetails(newDetails)\n  }\n\n  const createNewUser = async (user) => {\n    await UsersApi.addNewUser(user)\n    setModalNewUserVisibility(!modalNewUserVisibility)\n    await fetchingUsers()\n    showSuccessMessage('Запись добавлена')\n  }\n\n  const editUser = async (user) => {\n    await UsersApi.editUser(user, user.id)\n    setModalVEditUserVisibility(!modalEditUserVisibility)\n    await fetchingUsers()\n    showSuccessMessage('Запись изменена')\n  }\n\n  const deleteUser = async (user) => {\n    await UsersApi.deleteUser(user.id)\n    await fetchingUsers()\n    setWarningVisibility(!warningVisibility)\n    showSuccessMessage('Запись удалена')\n    setDetails(details.splice(details.indexOf(itemIndex), 1))\n    setDetails(details.map((elem) => {\n      return elem > itemIndex ? elem - 1 : elem\n    }))\n  }\n\n  const toggleModalNewUser = () => {\n    setUserData(userState)\n    setModalNewUserVisibility(!modalNewUserVisibility)\n  }\n\n  const toggleModalEditUser = (user) => {\n    setUserData(user)\n    setModalVEditUserVisibility(!modalEditUserVisibility)\n  }\n\n  const toggleWarning = (user, index) => {\n    setUserData(user)\n    setWarningVisibility(!warningVisibility)\n    setItemIndex(index)\n  }\n\n  const showSuccessMessage = (toastText) => {\n    setToasts([...toasts, {message: toastText}])\n  }\n\n  return (\n    <div>\n      <CButton\n        color=\"primary\"\n        onClick={toggleModalNewUser}\n        className=\"mb-2\"\n      >Добавить нового пользователя\n      </CButton>\n      <CButton\n        color=\"secondary\"\n        onClick={() => setClearFilters({})}\n        className=\"mb-2 float-right\"\n\n      >\n        Очистить фильтры\n      </CButton>\n      <CCard>\n        <CDataTable\n          items={allUsers}\n          fields={fields}\n          itemsPerPage={10}\n          pagination={\n            {align: \"center\"}\n          }\n          sorter\n          columnFilter\n          columnFilterValue={clearFilters}\n          onColumnFilterChange={setClearFilters}\n          striped\n          scopedSlots={{\n            'show_details':\n              (item, index) => {\n                return (\n                  <td className=\"py-2\">\n                    <CButton\n                      color=\"primary\"\n                      variant=\"outline\"\n                      size=\"sm\"\n                      onClick={() => {\n                        toggleDetails(index)\n                      }}\n                    >\n                      Действия\n                    </CButton>\n                  </td>\n                )\n              },\n            'details':\n              (item, index) => {\n                return (\n                  <CCollapse show={details.includes(index)}>\n                    <CCardBody>\n                      <h4>\n                        {item.firstName} {item.lastName}\n                      </h4>\n                      <>\n                        <CButton\n                          size=\"sm\"\n                          color=\"primary\"\n                          onClick={() => toggleModalEditUser(item)}\n                        >\n                          Редактировать\n                        </CButton>\n                      </>\n                      <CButton\n                        size=\"sm\"\n                        color=\"danger\"\n                        className=\"ml-1\"\n                        onClick={() => toggleWarning(item, index)}\n                      >\n                        Удалить\n                      </CButton>\n                    </CCardBody>\n                  </CCollapse>\n                )\n              }\n          }}\n        >\n        </CDataTable>\n      </CCard>\n\n      <MyModal\n        visible={modalNewUserVisibility}\n        setVisible={setModalNewUserVisibility}\n        userData={userData}\n        setUserData={setUserData}\n        updateUsers={createNewUser}\n        isPasswordRequired={true}\n      />\n\n      <MyModal\n        visible={modalEditUserVisibility}\n        setVisible={setModalVEditUserVisibility}\n        userData={userData}\n        setUserData={setUserData}\n        updateUsers={editUser}\n      />\n\n      <MyWarning\n        visible={warningVisibility}\n        setVisible={setWarningVisibility}\n        userData={userData}\n        deleteUser={deleteUser}\n      />\n\n      <MyToast\n        toasters={toasts}\n      />\n\n    </div>\n  )\n}\n\nexport default Dashboard\n"],"sourceRoot":""}